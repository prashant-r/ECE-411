-- VHDL Entity ece411.Execute.interface
--
-- Created:
--          by - ravi7.ews (linux-a2.ews.illinois.edu)
--          at - 11:50:41 03/27/14
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY Execute IS
   PORT( 
      EX_CONTROL  : IN     CONTROL_WORD;
      EX_SRCA     : IN     STD_LOGIC_VECTOR (15 DOWNTO 0);
      EX_SRCB     : IN     STD_LOGIC_VECTOR (15 DOWNTO 0);
      Ex_CC       : IN     LC3b_cc;
      Ex_IR       : IN     LC3b_word;
      Ex_NPC      : IN     LC3b_word;
      Ex_dest_reg : IN     STD_LOGIC_VECTOR (2 DOWNTO 0);
      Mem_CC      : IN     LC3b_reg;
      RESET_L     : IN     STD_LOGIC;
      clk         : IN     std_logic;
      ALURESULT   : OUT    LC3b_word;
      Branch_true : OUT    STD_LOGIC
   );

-- Declarations

END Execute ;

--
-- VHDL Architecture ece411.Execute.struct
--
-- Created:
--          by - ravi7.ews (linux-a2.ews.illinois.edu)
--          at - 11:50:41 03/27/14
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

LIBRARY mp3lib;

ARCHITECTURE struct OF Execute IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL A        : STD_LOGIC;
   SIGNAL A1       : STD_LOGIC;
   SIGNAL A2       : STD_LOGIC;
   SIGNAL ALUop_ID : LC3b_aluop;
   SIGNAL B        : STD_LOGIC;
   SIGNAL B1       : STD_LOGIC;
   SIGNAL B2       : STD_LOGIC;
   SIGNAL F        : STD_LOGIC;
   SIGNAL F1       : STD_LOGIC;
   SIGNAL F2       : STD_LOGIC;
   SIGNAL NZP      : LC3b_cc;


   -- Component Declarations
   COMPONENT AND2
   PORT (
      A : IN     STD_LOGIC;
      B : IN     STD_LOGIC;
      F : OUT    STD_LOGIC
   );
   END COMPONENT;
   COMPONENT BitSelector
   PORT (
      clk           : IN     std_logic;
      regA_inst_out : IN     LC3b_word;
      Imm5          : OUT    lc3b_imm5;
      NZP           : OUT    LC3b_cc;
      Opcode        : OUT    LC3b_opcode;
      SRCB          : OUT    LC3b_reg;
      SrcA          : OUT    LC3b_reg;
      bit5          : OUT    std_logic;
      dest          : OUT    LC3b_reg;
      index6        : OUT    LC3b_index6;
      offset6       : OUT    LC3b_index6;
      offset9       : OUT    LC3b_offset9
   );
   END COMPONENT;
   COMPONENT Control_slice
   PORT (
      Control_ID  : IN     CONTROL_WORD;
      RESET_L     : IN     STD_LOGIC;
      clk         : IN     std_logic;
      ALUop_ID    : OUT    LC3b_aluop;
      LD_reg_h    : OUT    std_logic;
      PCMuxSel    : OUT    STd_logic;
      Set_cc_h    : OUT    std_logic;
      dataMuXsel  : OUT    std_logic_vector (1 DOWNTO 0);
      mread_l     : OUT    std_logic;
      mwriteh_l   : OUT    std_logic;
      mwritel_l   : OUT    std_logic;
      srcb_select : OUT    std_logic
   );
   END COMPONENT;
   COMPONENT NZPdoubleDecoder
   PORT (
      Mem_CC  : IN     LC3b_reg;
      NZP     : IN     LC3b_cc;
      RESET_L : IN     STD_LOGIC;
      clk     : IN     std_logic;
      A       : OUT    STD_LOGIC;
      A1      : OUT    STD_LOGIC;
      A2      : OUT    STD_LOGIC;
      B       : OUT    STD_LOGIC;
      B1      : OUT    STD_LOGIC;
      B2      : OUT    STD_LOGIC
   );
   END COMPONENT;
   COMPONENT OR3
   PORT (
      A : IN     STD_LOGIC;
      B : IN     STD_LOGIC;
      C : IN     STD_LOGIC;
      F : OUT    STD_LOGIC
   );
   END COMPONENT;
   COMPONENT ALU
   PORT (
      A     : IN     LC3B_WORD ;
      ALUOP : IN     LC3B_ALUOP ;
      B     : IN     LC3B_WORD ;
      F     : OUT    LC3B_WORD 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : ALU USE ENTITY mp3lib.ALU;
   FOR ALL : AND2 USE ENTITY ece411.AND2;
   FOR ALL : BitSelector USE ENTITY ece411.BitSelector;
   FOR ALL : Control_slice USE ENTITY ece411.Control_slice;
   FOR ALL : NZPdoubleDecoder USE ENTITY ece411.NZPdoubleDecoder;
   FOR ALL : OR3 USE ENTITY ece411.OR3;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_3 : AND2
      PORT MAP (
         A => A,
         B => B,
         F => F
      );
   U_4 : AND2
      PORT MAP (
         A => A1,
         B => B1,
         F => F1
      );
   U_5 : AND2
      PORT MAP (
         A => A2,
         B => B2,
         F => F2
      );
   U_1 : BitSelector
      PORT MAP (
         clk           => clk,
         regA_inst_out => Ex_IR,
         Imm5          => OPEN,
         NZP           => NZP,
         Opcode        => OPEN,
         SRCB          => OPEN,
         SrcA          => OPEN,
         bit5          => OPEN,
         dest          => OPEN,
         index6        => OPEN,
         offset9       => OPEN,
         offset6       => OPEN
      );
   U_0 : Control_slice
      PORT MAP (
         Control_ID  => EX_CONTROL,
         RESET_L     => RESET_L,
         clk         => clk,
         ALUop_ID    => ALUop_ID,
         dataMuXsel  => OPEN,
         LD_reg_h    => OPEN,
         Set_cc_h    => OPEN,
         PCMuxSel    => OPEN,
         mread_l     => OPEN,
         mwritel_l   => OPEN,
         mwriteh_l   => OPEN,
         srcb_select => OPEN
      );
   U_2 : NZPdoubleDecoder
      PORT MAP (
         Mem_CC  => Mem_CC,
         NZP     => NZP,
         RESET_L => RESET_L,
         clk     => clk,
         A       => A,
         A1      => A1,
         A2      => A2,
         B       => B,
         B1      => B1,
         B2      => B2
      );
   U_6 : OR3
      PORT MAP (
         A => F,
         B => F1,
         C => F2,
         F => Branch_true
      );
   aALU : ALU
      PORT MAP (
         A     => EX_SRCA,
         ALUOP => ALUop_ID,
         B     => EX_SRCB,
         F     => ALURESULT
      );

END struct;
