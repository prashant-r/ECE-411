-- VHDL Entity ece411.EX_MEM.interface
--
-- Created:
--          by - ravi7.ews (linux-a2.ews.illinois.edu)
--          at - 23:13:19 03/30/14
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY EX_MEM IS
   PORT( 
      RESET_L        : IN     STD_LOGIC;
      clk            : IN     std_logic;
      set_regC       : IN     std_logic;
      ALURESULT      : IN     LC3b_word;
      MEM_ALUout     : OUT    LC3b_word;
      Mem_Control    : OUT    CONTROL_WORD;
      Mem_nextPC     : OUT    LC3b_word;
      Mem_IR         : OUT    LC3b_word;
      Mem_CC         : OUT    LC3b_reg;
      Ex_CC          : IN     LC3b_cc;
      EX_CONTROL     : IN     CONTROL_WORD;
      Ex_IR          : IN     LC3b_word;
      Ex_NPC         : IN     LC3b_word;
      dest_regC      : OUT    STD_LOGIC_VECTOR (2 DOWNTO 0);
      Ex_dest_reg    : IN     STD_LOGIC_VECTOR (2 DOWNTO 0);
      Branch_true    : IN     STD_LOGIC;
      Branch_true_EX : OUT    STD_LOGIC;
      EX_SRCA        : IN     STD_LOGIC_VECTOR (15 DOWNTO 0);
      EX_SRCB        : IN     STD_LOGIC_VECTOR (15 DOWNTO 0);
      MEM_SRCA       : OUT    STD_LOGIC_VECTOR (15 DOWNTO 0);
      MEM_SRCB       : OUT    std_logic_vector (15 DOWNTO 0)
   );

-- Declarations

END EX_MEM ;

--
-- VHDL Architecture ece411.EX_MEM.struct
--
-- Created:
--          by - ravi7.ews (linux-a2.ews.illinois.edu)
--          at - 23:13:20 03/30/14
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

LIBRARY mp3lib;

ARCHITECTURE struct OF EX_MEM IS

   -- Architecture declarations

   -- Internal signal declarations


   -- Component Declarations
   COMPONENT ControlStore
   PORT (
      CLK         : IN     std_logic ;
      RESET       : IN     STD_LOGIC ;
      SET         : IN     STD_LOGIC ;
      Control_in  : IN     CONTROL_WORD ;
      Control_out : OUT    CONTROL_WORD 
   );
   END COMPONENT;
   COMPONENT REG1
   PORT (
      A       : IN     STD_LOGIC;
      CLK     : IN     STD_LOGIC;
      EN      : IN     STD_LOGIC;
      RESET_L : IN     STD_LOGIC;
      F       : OUT    STD_LOGIC
   );
   END COMPONENT;
   COMPONENT REG3
   PORT (
      A       : IN     STD_LOGIC_VECTOR (2 DOWNTO 0);
      CLK     : IN     STD_LOGIC;
      EN      : IN     STD_LOGIC;
      RESET_L : IN     STD_LOGIC;
      F       : OUT    STD_LOGIC_VECTOR (2 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT Reg16
   PORT (
      RESET  : IN     std_logic ;
      clk    : IN     std_logic ;
      input  : IN     LC3b_word ;
      load   : IN     std_logic ;
      Output : OUT    LC3b_word 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : ControlStore USE ENTITY ece411.ControlStore;
   FOR ALL : REG1 USE ENTITY ece411.REG1;
   FOR ALL : REG3 USE ENTITY ece411.REG3;
   FOR ALL : Reg16 USE ENTITY ece411.Reg16;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_2 : ControlStore
      PORT MAP (
         CLK         => clk,
         RESET       => RESET_L,
         SET         => set_regC,
         Control_in  => EX_CONTROL,
         Control_out => Mem_Control
      );
   U_6 : REG1
      PORT MAP (
         RESET_L => RESET_L,
         A       => Branch_true,
         EN      => set_regC,
         CLK     => clk,
         F       => Branch_true_EX
      );
   U_3 : REG3
      PORT MAP (
         RESET_L => RESET_L,
         A       => Ex_CC,
         EN      => set_regC,
         CLK     => clk,
         F       => Mem_CC
      );
   U_4 : REG3
      PORT MAP (
         RESET_L => RESET_L,
         A       => Ex_dest_reg,
         EN      => set_regC,
         CLK     => clk,
         F       => dest_regC
      );
   U_0 : Reg16
      PORT MAP (
         RESET  => RESET_L,
         clk    => clk,
         input  => ALURESULT,
         load   => set_regC,
         Output => MEM_ALUout
      );
   U_1 : Reg16
      PORT MAP (
         RESET  => RESET_L,
         clk    => clk,
         input  => Ex_IR,
         load   => set_regC,
         Output => Mem_IR
      );
   U_5 : Reg16
      PORT MAP (
         RESET  => RESET_L,
         clk    => clk,
         input  => Ex_NPC,
         load   => set_regC,
         Output => Mem_nextPC
      );
   U_7 : ENTITY mp3lib.REG16
      PORT MAP (
         RESET_L => RESET_L,
         A       => EX_SRCA,
         EN      => set_regC,
         CLK     => clk,
         F       => MEM_SRCA
      );
   U_8 : ENTITY mp3lib.REG16
      PORT MAP (
         RESET_L => RESET_L,
         A       => EX_SRCB,
         EN      => set_regC,
         CLK     => clk,
         F       => MEM_SRCB
      );

END struct;
