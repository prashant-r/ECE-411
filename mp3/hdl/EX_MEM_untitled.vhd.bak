--
-- VHDL Architecture ece411.EX_MEM.untitled
--
-- Created:
--          by - aikara2.ews (gelib-057-38.ews.illinois.edu)
--          at - 20:31:22 03/18/14
--
-- using Mentor Graphics HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY EX_MEM IS
   PORT( 
      RESET_L        : IN     STD_LOGIC;
      clk            : IN     std_logic;
      set_regC       : IN     std_logic;
      Mem_IR_o       : OUT    LC3b_word;
      Mem_NextPC_o   : OUT    LC3b_word;
      Mem_CC_o       : OUT    STD_LOGIC_VECTOR (2 DOWNTO 0);
      Mem_CheckNZP_o : OUT    STD_LOGIC_VECTOR (2 DOWNTO 0);
      Mem_reg_Dest_o : OUT    STD_LOGIC_VECTOR (2 DOWNTO 0);
      ALU_Result     : OUT    LC3B_WORD;
      Mem_Adress_o   : OUT    LC3b_word;
      BR_OP_h_o      : OUT    STD_LOGIC;
      RD_Data_h_o    : OUT    STD_LOGIC;
      WE_Data_h_o    : OUT    STD_LOGIC;
      control        : IN     CONTROL_WORD;
      Mem_Adress     : IN     LC3b_word;
      ALURESULT      : IN     LC3b_word
   );

-- Declarations

END EX_MEM ;

--

ARCHITECTURE UNTITLED OF EX_MEM IS
SIGNAL ALU_Result_s   : LC3B_WORD;
SIGNAL Mem_Adress_s   : LC3b_word;
SIGNAL Mem_IR_s       : LC3b_word;
SIGNAL Mem_NextPC_s   : LC3b_word;
SIGNAL Mem_CC_s       : STD_LOGIC_VECTOR (2 DOWNTO 0);
SIGNAL Mem_CheckNZP_s : STD_LOGIC_VECTOR (2 DOWNTO 0);
SIGNAL Mem_reg_Dest_s : STD_LOGIC_VECTOR (2 DOWNTO 0);
SIGNAL BR_OP_h_s      : STD_LOGIC;
SIGNAL RD_Data_h_s    : STD_LOGIC;
SIGNAL WE_Data_h_s    : STD_LOGIC;

BEGIN
	PROCESS (CLK, RESET_L, set_regC, ALUout, Mem_Adress, Mem_IR, Mem_NextPC, Mem_CC, Mem_CheckNZP, Mem_reg_Dest,
	           BR_OP_h, RD_Data_h, WE_Data_h)
	BEGIN
		IF RESET_L = '0' THEN
		  
      ALU_Result_s   <= (OTHERS => '0');
      Mem_Adress_s   <= (OTHERS => '0');
      Mem_IR_s       <= (OTHERS => '0');
      Mem_NextPC_s   <= (OTHERS => '0');
      Mem_CC_s       <= (OTHERS => '0');
      Mem_CheckNZP_s <= (OTHERS => '0');
      Mem_reg_Dest_s <= (OTHERS => '0');
      BR_OP_h_s      <= '0';
      RD_Data_h_s    <= '0';
      WE_Data_h_s    <= '0';

		ELSIF CLK'EVENT AND CLK = '1' THEN
			IF (set_regC = '1') THEN
			  
			  ALU_Result_s   <= ALUout;
        Mem_Adress_s   <= Mem_Adress;
        Mem_IR_s       <= Mem_IR;
        Mem_NextPC_s   <= Mem_NextPC;
        Mem_CC_s       <= Mem_CC;
        Mem_CheckNZP_s <= Mem_CheckNZP;
        Mem_reg_Dest_s <= Mem_reg_Dest;
        BR_OP_h_s      <= BR_OP_h;
        RD_Data_h_s    <= RD_Data_h;
        WE_Data_h_s    <= WE_Data_h;
         
      END IF;
		END IF;
	END PROCESS;
	
	   ALU_Result     <= ALU_Result_s;
     Mem_Adress_o   <= Mem_Adress_s; 
     Mem_IR_o       <= Mem_IR_s;  
     Mem_NextPC_o   <= Mem_NextPC_s; 
     Mem_CC_o       <= Mem_CC_s;
     Mem_CheckNZP_o <= Mem_CheckNZP_s;
     Mem_reg_Dest_o <= Mem_reg_Dest_s;
     BR_OP_h_o      <= BR_OP_h_s;
     RD_Data_h_o    <= RD_Data_h_s;
     WE_Data_h_o    <= WE_Data_h_s;

END UNTITLED;
