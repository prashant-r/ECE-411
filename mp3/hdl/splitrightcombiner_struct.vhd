-- VHDL Entity ece411.SplitRightCombiner.symbol
--
-- Created:
--          by - ravi7.ews (siebl-0220-20.ews.illinois.edu)
--          at - 13:23:24 02/28/14
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY SplitRightCombiner IS
   PORT( 
      Potential_word : IN     Lc3b_word;
      WordComin      : IN     LC3b_word;
      mwrite_inH     : IN     std_logic;
      mwrite_inL     : IN     std_logic;
      offsetOn       : IN     std_logic;
      COrrectedWord  : OUT    LC3b_word
   );

-- Declarations

END SplitRightCombiner ;

--
-- VHDL Architecture ece411.SplitRightCombiner.struct
--
-- Created:
--          by - ravi7.ews (siebl-0220-20.ews.illinois.edu)
--          at - 13:23:25 02/28/14
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

LIBRARY mp3lib;

ARCHITECTURE struct OF SplitRightCombiner IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL F        : STD_LOGIC;
   SIGNAL F1       : STD_LOGIC;
   SIGNAL HighAB   : LC3B_BYTE;
   SIGNAL High_A   : LC3b_byte;
   SIGNAL High_b   : LC3B_BYTE;
   SIGNAL LowAB    : LC3B_BYTE;
   SIGNAL Low_A    : LC3B_BYTE;
   SIGNAL Low_B    : LC3B_BYTE;
   SIGNAL SelectHL : std_logic;


   -- Component Declarations
   COMPONENT ByteCombiner
   PORT (
      HighAB        : IN     LC3B_BYTE ;
      LowAB         : IN     LC3B_BYTE ;
      COrrectedWord : OUT    LC3b_word 
   );
   END COMPONENT;
   COMPONENT ByteMux
   PORT (
      F      : IN     STD_LOGIC;
      High_A : IN     LC3b_BYTE;
      High_b : IN     LC3B_BYTE;
      HighAB : OUT    LC3B_BYTE
   );
   END COMPONENT;
   COMPONENT Word2Byte
   PORT (
      Potential_word : IN     LC3b_word;
      High_b         : OUT    LC3B_BYTE;
      Low_B          : OUT    LC3B_BYTE
   );
   END COMPONENT;
   COMPONENT NOR2
   PORT (
      A : IN     STD_LOGIC ;
      B : IN     STD_LOGIC ;
      F : OUT    STD_LOGIC 
   );
   END COMPONENT;
   COMPONENT NOT1
   PORT (
      A : IN     STD_LOGIC ;
      F : OUT    STD_LOGIC 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : ByteCombiner USE ENTITY ece411.ByteCombiner;
   FOR ALL : ByteMux USE ENTITY ece411.ByteMux;
   FOR ALL : NOR2 USE ENTITY mp3lib.NOR2;
   FOR ALL : NOT1 USE ENTITY mp3lib.NOT1;
   FOR ALL : Word2Byte USE ENTITY ece411.Word2Byte;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_4 : ByteCombiner
      PORT MAP (
         HighAB        => HighAB,
         LowAB         => LowAB,
         COrrectedWord => COrrectedWord
      );
   U_0 : ByteMux
      PORT MAP (
         F      => F,
         High_A => High_A,
         High_b => High_b,
         HighAB => HighAB
      );
   U_3 : ByteMux
      PORT MAP (
         F      => SelectHL,
         High_A => Low_A,
         High_b => Low_B,
         HighAB => LowAB
      );
   U_2 : Word2Byte
      PORT MAP (
         Potential_word => Potential_word,
         High_b         => High_b,
         Low_B          => Low_B
      );
   U_8 : Word2Byte
      PORT MAP (
         Potential_word => WordComin,
         High_b         => High_A,
         Low_B          => Low_A
      );
   U_5 : NOR2
      PORT MAP (
         A => F1,
         B => mwrite_inH,
         F => F
      );
   U_6 : NOR2
      PORT MAP (
         A => F1,
         B => mwrite_inL,
         F => SelectHL
      );
   U_7 : NOT1
      PORT MAP (
         A => offsetOn,
         F => F1
      );

END struct;
